#xxx date 13 dec 2023
           #product_counts={}
           #loop through new_bought_rows 
           #report_details=[]#list to store details for each row
           #for row in bought_rows:#w?y type:type dic 
                #print('L 301 row', row)#w?y
               #check iffor product_name, count in product_counts.items():
  
               #if row['product_name']=='appel' and row['expiration_date'] >= internal_date:
               #extract product_name
                     #product_name=row['product_name']

                     #count occurrences of each product
                     #if product_name in product_counts:
                          #product_counts[product_name]+=1
                     #else:
                          #product_counts[product_name]=1
                      #store relevant details in report_details
                     #report_details.append({
                           #'product_name':product_name,
                           #'buy_price':row['buy_price'],
                           #'expiration_date':row['expiration_date']

                      #})
            #displat the result
                     #for report_detail in report_details:  
                        #print(f"{report_detail['product_name']} {product_counts[report_detail['product_name']]} {report_detail['buy_price']} {report_detail['expiration_date']}")
            ### end dte 13 dec 2023  
            # Display the result
           #for product_name, count in product_counts.items():
               #print('L315 ')
               #print(f"{product_name} {count} {row['buy_price']} {row['expiration_date']}")
          
           


         #xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
           
              #define a list with name  new_appel_rows which only containt product_name=appel
              #new_appel_rows=[]#list
           
              #print('L 300 appel_listDic:',appel_listDic)
              #print('L 301 type(appel_listDic):',type(appel_listDic))
              
              #row['product_name']#w?y type:string
              #print("L303 row['product_name']", row['product_name'])
              #print("type(row['product_name'])", type(row['product_name']))
              #if row['product_name']=='appel':
                   
                   #new_appel_rows.append(row)
                   #print('L308 in for/loop new_appel_rows',new_appel_rows)
                   #print('L309 in for/loop type(new_appel_rows)',type(new_appel_rows))
                   #appel_counter=appel_counter+1#w? not yet type:int
                   #print('L311 in for/loopappel_counter:',appel_counter)
                   #print('L312 in for/loop type(appel_counter):',type(appel_counter))
                   #print('xxx xxx xxx xxx xxx ')
              #print for outsite for/loop    
              #print('L305 buiten for/loop new_appel_rows',new_appel_rows)
              #print('L306 buiten for/loop type(new_appel_rows)',type(new_appel_rows))
              #print('L302 buiten for/loop appel_counter:',appel_counter)
              #print('L303 buiten for/loop type(appel_counter):',type(appel_counter))
              
            
            #convert:appel_counter,banana_counter,orange_counter into string to display in the tabel

            #make a table
            #table=Table(title='Inventory : now (according to the internal_date)')

            #add colomns in the table:alle colomns works? yes good job
            #table.add_column("Product Name",justify='center',style="cyan",no_wrap=True)
            #table.add_column("Count",justify='center',style="cyan",no_wrap=True)
            #table.add_column("Buy Price",justify='center',style="cyan",no_wrap=True)
            #table.add_column("Expiration Date",justify='center',style="cyan",no_wrap=True)

            #add row in table
            #table.add_row(row['product_name'],appel_counter,row['buy_price'],row['expiration_date'])    
            #table.add_row(row['buy_price'])   
     

              #create a console object
              #console=Console()
              #ser soft-wrap property of the console object
              #console.soft_wrap=True
              #print(table, )#soft_wrap=True
    
      return

#if row['product_name']=='banana':
                    #banana_counter==banana_counter+1
              #if row['product_name']=='orange':
                     #orange_counter=='orange'     

#banana_counter=int(0)
#orange_counter=int(0)

xxx backup 17-12-2023 van een stukje code mogelijk straks nodig:
 #for row in bought_rows:
          #print(f"Processing row:{row}")#w?y
          #define a new list (of dictionary) ALL products with expiration_date >= internal_date
          #all_product_expDate_QualOrLargerThan_internalDate=[]
          
          #convert expiration_date to a datetime also for internaldate
          #exp_date_in_datetime=string_to_datetime(row['expiration_date'])#type datetime object
          #print('L 299 exp_date_in_datetime',exp_date_in_datetime)#w?y
          #print('L 300 type(exp_date_in_datetime)',type(exp_date_in_datetime))#w?y
          
          #internalDate_in_datetime=string_to_datetime(internal_date)
          #print('internalDate_in_datetime',internalDate_in_datetime)#w?y
          #print('L304 type(internalDate_in_datetime)',type(internalDate_in_datetime))#w?y type datetime object
          
          #select only the items which expiration_date >= internal_date
          #if  exp_date_in_datetime>= internalDate_in_datetime:#w?y
               #all_product_expDate_QualOrLargerThan_internalDate.append(row)#w?y
     
          #for row in all_product_expDate_QualOrLargerThan_internalDate:#w?y
                  
                  #print('L300 row',row)#w?y
                  #print('row',type(row))#w?y type:class 'dict'
          
          #For each product (e.g., apple, banana, orange):
          #Create a sublist containing only rows for that product here is product_name='appel'
                   #appel_expDate_QualOrLargerThan_internalDate=[]#type class list
                   #print('appel_expDate_QualOrLargerThan_internalDate',type(appel_expDate_QualOrLargerThan_internalDate))
          #if  all_product_expDate_QualOrLargerThan_internalDate['product_name']=='appel':
                  #appel_expDate_QualOrLargerThan_internalDate.append(row)
          
          #controle the  appel_expDate_QualOrLargerThan_internalDate 
          #for row in appel_expDate_QualOrLargerThan_internalDate :
               #print('L 322 row',row)
               #print('L 323type(row)',type(row))
          
    xxx einde xxx